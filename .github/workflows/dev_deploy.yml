# github repository actions 페이지에 나타날 이름
name: EatPic CI/CD (using github actions & docker)

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:

      ## jdk setting
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'


      ## gradle caching
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      ## create application.yml
      - name: make application.yml
        if: contains(github.ref, 'main') || contains(github.ref, 'refs/pull/')
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch application.yml
          echo "${{ secrets.YML_DEV }}" > application.yml
        shell: bash

      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew

      ## docker build & push
      - name: docker build
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/imagename .
          docker push ${{ secrets.DOCKER_USERNAME }}/imagename:latest

      ## docker deploy
      - name: Deploy to dev
        uses: appleboy/ssh-action@master
        id: deploy-dev
        # if: contains(github.ref, 'develop')
        if : contains(github.ref,'main')
        with:
          key: ${{ secrets.PRIVATE_KEY }}
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.USERNAME }}
          port: 22
          script: |
            docker rm -f $(docker ps -qa)
            docker pull ${{ secrets.DOCKER_USERNAME }}/eatpic
            docker-compose up -d
            docker image prune -f

  ## time
  current-time:
    needs: CI-CD
    runs-on: ubuntu-latest
    steps:
      - name: Get Current Time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH:mm:ss
          utcOffset: "+09:00"
      - name: Print Current Time
        run: echo "Current Time=${{steps.current-time.outputs.formattedTime}}"
        shell: bash
